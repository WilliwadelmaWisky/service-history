package application.io;

import application.Car;
import application.ServiceHistory;
import application.ServiceRecord;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

/**
 *
 */
public class ServiceDocument implements Document {

    private static final String DOCUMENT_FORMAT = "html";

    private final String _content;


    /**
     * @param car
     * @param serviceHistory
     */
    public ServiceDocument(final Car car, final ServiceHistory serviceHistory) {
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd.MM.yyyy");

        CSSBuilder cssBuilder = new CSSBuilder();
        cssBuilder.style("body", "margin: 0; padding: 0; border: 0;");
        cssBuilder.style("h1", "box-sizing: border-box; width: 100%; font-family: Arial, sans-serif; font-size: 1.5em; color: white; text-align: center; background-color: #b3588a; border: 2px solid #914771; padding: 10px; margin: 0;");
        cssBuilder.style("p", "font-family: Arial, sans-serif; font-size: 0.8em;");
        cssBuilder.style("table", "width: 100%; font-family: Arial, sans-serif; font-size: 0.8em; letter-spacing: 1px; border-collapse: collapse;");
        cssBuilder.style("th", "text-align: left; color: white; font-size: 1.2em; background-color: #b3588a; border: 2px solid #914771; padding: 8px 12px;");
        cssBuilder.style("td", "padding: 8px 12px; border: 2px solid #666;");
        cssBuilder.custom("tr:nth-of-type(even) { background-color: rgb(237 238 242); }");
        cssBuilder.styleByClass("flex", "display: flex; flex-direction: row; justify-content: left;");
        cssBuilder.custom(".flex>p { flex-grow: 0; text-align: left; padding: 4px 0; margin: 0; width: 12em; }");
        cssBuilder.custom(".flex>.vin-label { flex-grow: 1; }");
        cssBuilder.styleByClass("hline", "height: 3px; background-color: #666;");
        cssBuilder.styleByClass("field-label", "font-family: Arial, sans-serif; font-weight: bold; color: #8e94ab;");
        cssBuilder.styleByClass("auto-gen-label", "text-align: right;");
        cssBuilder.styleByClass("container", "padding: 2em 1em;");

        HTMLBuilder htmlBuilder = new HTMLBuilder();
        htmlBuilder.head("Service Document", cssBuilder.toString());
        htmlBuilder.beginBody();

        htmlBuilder.h1("VEHICLE SERVICE HISTORY", null);

        htmlBuilder.beginTag("div", "container");
        htmlBuilder.beginTag("div", "flex");
        htmlBuilder.p(car.getMake(), null);
        htmlBuilder.p(car.getModel(), null);
        htmlBuilder.p(car.getVIN(), "vin-label");
        htmlBuilder.p(car.getManufactureDate().format(dateFormatter), null);
        htmlBuilder.endTag("div");
        htmlBuilder.beginTag("div", "hline");
        htmlBuilder.endTag("div");
        htmlBuilder.beginTag("div", "flex");
        htmlBuilder.p("Make", "field-label");
        htmlBuilder.p("Model", "field-label");
        htmlBuilder.p("VIN", "field-label vin-label");
        htmlBuilder.p("Date of Manufacture", "field-label");
        htmlBuilder.endTag("div");
        htmlBuilder.p("", null);
        htmlBuilder.beginTag("div", "flex");
        htmlBuilder.p(car.getLicense(), null);
        htmlBuilder.p(car.getRegistrationDate().format(dateFormatter), null);
        htmlBuilder.endTag("div");
        htmlBuilder.beginTag("div", "hline");
        htmlBuilder.endTag("div");
        htmlBuilder.beginTag("div", "flex");
        htmlBuilder.p("License Plate", "field-label");
        htmlBuilder.p("Date of Registration", "field-label");
        htmlBuilder.endTag("div");
        htmlBuilder.endTag("div");

        htmlBuilder.beginTag("table", null);
        htmlBuilder.createElement("tr", "<th>Date</th><th>Description</th><th>Repairer</th><th>Mileage</th>", null);
        for (ServiceRecord serviceRecord : serviceHistory) {
            htmlBuilder.beginTag("tr", null);
            htmlBuilder.createElement("td", serviceRecord.getDate().format(dateFormatter), null);
            htmlBuilder.createElement("td", serviceRecord.getDescription(), null);
            htmlBuilder.createElement("td", serviceRecord.getRepairer(), null);
            htmlBuilder.createElement("td", String.valueOf(serviceRecord.getMileage()), null);
            htmlBuilder.endTag("tr");
        }

        htmlBuilder.endTag("table");
        String nowString = LocalDate.now().format(dateFormatter);
        htmlBuilder.p("This document is automatically generated by <a href=\"https://github.com/WilliwadelmaWisky/service-history\">service-history</a> at (" + nowString + ")", "auto-gen-label");

        htmlBuilder.endBody();
        _content = htmlBuilder.toString();
    }


    /**
     * @return
     */
    @Override
    public String getFormat() { return DOCUMENT_FORMAT; }

    /**
     * @return
     */
    @Override
    public String getContent() { return _content; }
}
